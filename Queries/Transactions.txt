let
    Origen = Web.BrowserContents("URL_TO_YOUR_GOOGLESHEETS"),
    #"Extract table from HTML" = Html.Table(Origen, {{"Column1", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(1)"}, {"Column2", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(2)"}, {"Column3", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(3)"}, {"Column4", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(4)"}, {"Column5", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(5)"}, {"Column6", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(6)"}, {"Column7", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(7)"}, {"Column8", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(8)"}, {"Column9", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(9)"}, {"Column10", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(10)"}, {"Column11", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(11)"}, {"Column12", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(12)"}, {"Column13", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(13)"}, {"Column14", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(14)"}, {"Column15", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(15)"}, {"Column16", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(16)"}, {"Column17", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(17)"}, {"Column18", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(18)"}, {"Column19", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(19)"}, {"Column20", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(20)"}, {"Column21", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(21)"}, {"Column22", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(22)"},{"Column23", "DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR > :nth-child(23)"}}, [RowSelector="DIV[id='0'] > DIV.ritz.grid-container > TABLE.waffle > * > TR"]),
    #"Delete blank rows" = Table.SelectRows(#"Extract table from HTML", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {"", null}))),
    #"Type changed" = Table.TransformColumnTypes(#"Delete blank rows",{{"Column1", Int64.Type}, {"Column2", type text}, {"Column3", type text}, {"Column4", type text}, {"Column5", type text}, {"Column6", type text}, {"Column7", type text}, {"Column8", type text}, {"Column9", type text}, {"Column10", type text}, {"Column11", type text}, {"Column12", type text}, {"Column13", type text}, {"Column14", type text}, {"Column15", type text}, {"Column16", type text}, {"Column17", type text}, {"Column18", type text}, {"Column19", type text}, {"Column20", type text}, {"Column21", type text}, {"Column22", type text}}),
    #"Blank rows removed" = Table.SelectRows(#"Type changed", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {"", null}))),
    #"Columns removed" = Table.RemoveColumns(#"Blank rows removed",{"Column1"}),
    #"Headers removed" = Table.PromoteHeaders(#"Columns removed", [PromoteAllScalars=true]),
    #"Change type" = Table.TransformColumnTypes(#"Headers removed",{{"№", Int64.Type}, {"ID de la orden", type text}, {"Producto", type text}, {"Transacción", type text}, {"Cantidad", type number}, {"Precio", Currency.Type}, {"Total", Currency.Type}, {"Fecha", type date}, {"Hora", type time}, {"Comisión", Currency.Type}, {"Tarifas", Currency.Type}, {"Tipo de orden", type text}, {"Lugar de la ejecución", type text}, {"Tasa de cambio", type number}, {"Plazo", type text}, {"Dividendos", type text}, {"Sector", type text}, {"Tipo", type text}, {"Valor actual", Currency.Type}, {"Valor actual total", Currency.Type}, {"Nombre", type text}}),
    #"Columns header changed" = Table.RenameColumns(#"Change type",{{"Valor actual total", "Total current value"}, {"Nombre", "Name"}, {"Plazo", "Term"}, {"Dividendos", "Dividends"}, {"Tipo", "Type"}}),
    #"Removed Blank Rows" = Table.SelectRows(#"Columns header changed", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {"", null})))
in
    #"Removed Blank Rows"